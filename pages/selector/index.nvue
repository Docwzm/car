<template>
	<view class="selector-wrap">
		<mpvue-picker ref="mpvuePicker" :mode="mode" :deepLength="deepLength" :pickerValueDefault="pickerValueDefault"
		 @onConfirm="onConfirm" @onCancel="onCancel" :pickerValueArray="pickerValueArray"></mpvue-picker>
		
		<form @submit="formSubmit">
			<view class="wrap">
				<view class="input-wrap">
					<uni-icon type="location" color="green" size="20" />
					<view class="tag">出发地</view>
					<input @focus="chooseLocation('start')" class="uni-input" name="startaddress" placeholder="请选择出发地址" :value="startaddress" />
				</view>
				<view class="input-wrap">
					<uni-icon type="location" color="red" size="20" />
					<view class="tag">目的地</view>
					<input @focus="chooseLocation('end')" class="uni-input" name="targetaddress" placeholder="请选择到达地址" :value="targetaddress" />
				</view>
				<view class="input-wrap">
					<uni-icon type="person" color="red" size="20" />
					<view class="tag">类型</view>
					<input disabled @click="showPicker('type')" name="type" :value="tabs[type]" />
				</view>
				<view class="input-wrap">
					<uni-icon type="date" color="red" size="20" />
					<view class="tag">出发日期</view>
					<view class="right">
						<picker name="date" mode="date" :value="date" :start="startDate" :end="endDate" @change="bindDateChange">
							<view class="uni-input">{{date}}</view>
						</picker>
					</view>
				</view>
			</view>

			<view class="wrap">
				<view class="input-wrap">
					<uni-icon type="person" color="red" size="20" />
					<view class="tag">人数</view>
					<input name="personnum" :value="personnum" @click="showPicker('person')" placeholder="人数" type="number" />
				</view>
			</view>
					
				<view class="btn-wrap">
					<button formType="submit" type="primary">提交</button>
				</view>
			</form>
		</view>
	</view>
</template>
<script>
	import validator from '@/common/validator.js'
	import mpvuePicker from '@/components/mpvue-picker/mpvuePicker.vue';
import {getPickerRange} from '@/common/util.js'
	export default {
		name:'selector',
		components: {
			mpvuePicker
			},
		data() {
			return {
				type:0,
				startaddress: '',
				targetaddress: '',
				tabs: ['人找车', '车找人'],
				activeColor: '#007aff',
				styleType: 'button',
				date:this.getDate({
            format: true
        }),
		personnum:0,
				mode: '',
				deepLength: 1,
				pickerValueDefault: [0],
				pickerValueArray:[],
			}
		},
		onLoad() {

		},
		computed: {
		        startDate() {
		            return this.getDate('start');
		        },
		        endDate() {
		            return this.getDate('end');
		        }
		    },
		methods: {
			getDate(type) {
			            const date = new Date();
			            let year = date.getFullYear();
			            let month = date.getMonth() + 1;
			            let day = date.getDate();
			
			            if (type === 'start') {
			                year = year - 60;
			            } else if (type === 'end') {
			                year = year + 2;
			            }
			            month = month > 9 ? month : '0' + month;;
			            day = day > 9 ? day : '0' + day;
			            return `${year}-${month}-${day}`;
			        },
					showPicker(type){
						console.log(this.$refs)
						this._type=type;
						this.pickerValueArray = getPickerRange(type)
						this.mode = 'selector'
						this.deepLength = 1
						this.pickerValueDefault = [0]
						this.$refs.mpvuePicker.show()
					},
					onConfirm(e) {
						if(this._type=='person'){
							this.personnum = e.value[0]
						}else{
							this.type = e.value[0]
						}
						
					},
					bindDateChange (e) {
						this.date = e.target.value
					},
					chooseLocation(type) {
						uni.chooseLocation({
							success: (res) => {
								if (type === 'start') {
									this.startaddress = res.address + ' ' + res.name
								} else {
									this.targetaddress = res.address + ' ' + res.name
								}
					
							}
						})
					},
			formSubmit(e) {
				//定义表单规则
				var rule = [{
						name: "startaddress",
						checkType: "notnull",
						checkRule: "",
						errorMsg: "please input the start location"
					},{
						name: "targetaddress",
						checkType: "notnull",
						checkRule: "",
						errorMsg: "please input the end location"
					},{
						name: "time",
						checkType: "notnull",
						checkRule: "",
						errorMsg: ""
					},{
						name: "name",
						checkType: "string",
						checkRule: "1,3",
						errorMsg: "姓名应为1-3个字符"
					},
					{
						name: "gender",
						checkType: "in",
						checkRule: "男,女",
						errorMsg: "请选择性别"
					},
					{
						name: "phone",
						checkType: "notnull",
						checkRule: "",
						errorMsg: ""
					},
					{
						name: "percent",
						checkType: "notnull",
						checkRule: "",
						errorMsg: ""
					}
				];
				//进行表单检查
				var formData = e.detail.value;
				console.log(formData)
				return false
				var checkRes = validator.check(formData, rule);
				if (checkRes) {
					uni.showToast({
						title: "验证通过!",
						icon: "none"
					});
					createPublisher(data).then(res).then(res => {
						
					})
				} else {
					uni.showToast({
						title: validator.error,
						icon: "none"
					});
				}
			}
		}
	}
</script>

<style lang="scss">
	page{
		background: #eee;
	}
	.wrap{
		margin-bottom:30upx;
		.input-wrap{
			&:last-child{
				border:none;
			}
		}
	}
	.input-wrap {
		display: flex;
		flex-direction: row;
		align-items: center;
		background:#fff;
		border-bottom:1upx solid #ccc;
		padding:10upx 30upx;
		
		input,.right{
			height:90upx;
			line-height: 90upx;
			flex:auto;
			text-align: right;
		}
		.tag{
			margin-right: 20upx;
		}
	}
	.textarea-wrap{
		background:#fff;
		height:100upx;
		padding:10upx 30upx;
	}
	.btn-wrap{
		margin-top:30upx;
		button{
			width:100%;
			border-radius: 0;
			background:#007aff;
		}
	}
	picker{
		height:100%;
	}
</style>
